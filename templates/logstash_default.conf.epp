input {
    relp {
        id => "plain_relp"
        port => "${CF_PORT}"
        type => "syslog"
    }
    relp {
        id => "secure_relp"
        port => "${CF_SECURE_PORT}"
        type => "syslog"
        ssl_enable => true
        ssl_cacert => "${CF_TLS_CACERT}"
        ssl_cert => "${CF_TLS_CERT}"
        ssl_key => "${CF_TLS_KEY}"
        ssl_verify => true
    }
}

filter {
    if [type] == "syslog" {
        syslog_pri {
            facility_labels => [
                "kernel",
                "user",
                "mail",
                "daemon",
                "auth",
                "daemon",
                "daemon",
                "news",
                "daemon",
                "cron",
                "authpriv",
                "daemon",
                "daemon",
                "audit",
                "alert",
                "clock",
                "local0",
                "local1",
                "local2",
                "local3",
                "local4",
                "local5",
                "local6",
                "local7"
            ]
            severity_labels => [
                "emerg",
                "alert",
                "crit",
                "error",
                "warn",
                "notice",
                "info",
                "debug"
            ]
            add_field => {
                '[@metadata][index]' => 'log'
            }
            remove_field => [
                "syslog_facility_code"
            ]
        }

        if [syslog_severity_code] <= 3 {
            mutate { add_tag => 'error' }
        }

        grok {
            match => { "message" => "%{SYSLOG5424LINE}" }
            remove_field => [
                "syslog5424_pri",
                "syslog5424_ver"
            ]
        }
        mutate {
            rename => {
                "syslog_severity" => "severity"
                "syslog_facility" => "facility"
                "syslog5424_msg" => "msg"
                "syslog5424_proc" => "pid"
                "syslog5424_app" => "app"
                "host" => "src"
                "syslog5424_host" => "host"
                #"message" => "orig"
            }
            remove_field => [
                "message",
                "type",
                "syslog_severity_code"
            ]
        }
        date {
            match => [ "syslog5424_ts", "ISO8601" ]
            remove_field => [ "syslog5424_ts" ]
        }
    }

    # CFDB stuff
    #---
    if [app] =~ '^cfmysql-' {
        if [app] =~ '-arb$' {
            grok {
                match => { 'msg' => '^%{TIMESTAMP_ISO8601}%{SPACE}(?<new_severity>[A-Z0-9]+):%{SPACE}%{GREEDYDATA:new_msg}' }
            }
            mutate {
                rename => {
                    'new_msg' => 'msg'
                    'new_severity' => 'severity'
                }
                lowercase => [ 'severity' ]
            }
            if [severity] == 'error' {
                mutate { add_tag => 'error'  }
            }
        }
    }

    # Access logs
    #---
    if [app] =~ '^access-' {
        grok {
            match => { 'msg' => '^%{NOTSPACE:vhost}:%{NONNEGINT:vport} %{HTTPD_COMBINEDLOG} %{NUMBER:duration}' }
            remove_field => [ 'msg' ]
        }
        mutate {
            replace => {
                '[@metadata][index]' => 'access'
            }
        }
    }

    if [app] =~ '^cfpuppet' and [msg] =~ '^\[ACCESS\] ' {
        grok {
            match => { 'msg' => '^\[ACCESS\] %{NOTSPACE:vhost}:%{NONNEGINT:vport} %{HTTPD_COMBINEDLOG} %{BASE10NUM:duration}' }
            remove_field => [ 'msg' ]
        }
        mutate {
            replace => {
                '[@metadata][index]' => 'access'
            }
        }
    }
    
    if [@metadata][index] == 'access' {
        geoip {
            cache_size => 10000
            fields => [
                'country_code3',
                'latitude',
                'longitude',
                'timezone'
            ]
            source => 'clientip'
            target => 'geoip'
        }
        mutate {
            convert => {
                'bytes' => 'integer'
                'duration' => 'float'
                'response' => 'integer'
                'vport' => 'integer'
            }
            gsub => [
                'agent', '"', '',
                'referrer', '"', ''
            ]
            remove_field => [
                'pid',
                'timestamp',
                'severity',
                'facility'
            ]
        }
        useragent {
            source => 'agent'
            target => 'ua'
        }
    }

    # Final touches
    #---
    mutate {
        gsub => [
            # Remove trailing newline
            'msg', '\n$', '',

            # MySQL prevends name to tag
            'app', '^mysqld-cfmysql', 'cfmysql',

            # Make sure to combine related
            'app', '^cf([^-]+)-([^-]+)-.*$', 'cf\1-\2',
            'app', '^app-([^-]+).*$', 'app-\1'
        ]
    }
}

output {
    # stdout { codec => rubydebug { metadata => true } }
    elasticsearch {
        id => "default_sink"
        hosts => "http://${DB_HOST}:${DB_PORT}"
        index => "%{[@metadata][index]}-%{+YYYY.MM.dd}"
    }
}
